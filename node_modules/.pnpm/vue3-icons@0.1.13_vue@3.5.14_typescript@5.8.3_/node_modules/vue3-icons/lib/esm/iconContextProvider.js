var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { defineComponent, provide } from 'vue';
import { DefaultContext, IconContextKey } from './iconContext';
export var IconContextProvider = defineComponent({
    name: 'IconContextProvider',
    props: {
        value: {
            type: Object,
            required: true,
        },
    },
    setup: function (props, _a) {
        var slots = _a.slots;
        provide(IconContextKey, __assign(__assign({}, DefaultContext), props.value));
        return function () {
            var _a;
            return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);
        };
    },
});
