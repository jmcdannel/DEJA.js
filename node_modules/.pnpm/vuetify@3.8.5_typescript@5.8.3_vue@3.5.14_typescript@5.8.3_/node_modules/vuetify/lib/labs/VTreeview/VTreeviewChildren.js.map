{"version":3,"file":"VTreeviewChildren.js","names":["VTreeviewGroup","VTreeviewItem","VCheckboxBtn","makeDensityProps","IconValue","computed","reactive","toRaw","withModifiers","genericComponent","propsFactory","makeVTreeviewChildrenProps","disabled","Boolean","loadChildren","Function","loadingIcon","type","String","default","items","Array","openOnClick","undefined","indeterminateIcon","falseIcon","trueIcon","returnObject","selectable","selectedColor","selectStrategy","Object","VTreeviewChildren","name","props","setup","_ref","slots","isLoading","Set","isClickOnOpen","checkChildren","item","length","children","add","value","raw","delete","selectItem","select","isSelected","map","itemProps","loading","has","slotsWithItem","prepend","slotProps","_createVNode","_Fragment","includes","density","isIndeterminate","e","key","stopPropagation","internalItem","append","title","subtitle","treeviewGroupProps","filterProps","treeviewChildrenProps","_mergeProps","activator","_ref2","activatorProps","listItemProps","onToggleExpand","onClick"],"sources":["../../../src/labs/VTreeview/VTreeviewChildren.tsx"],"sourcesContent":["// Components\nimport { VTreeviewGroup } from './VTreeviewGroup'\nimport { VTreeviewItem } from './VTreeviewItem'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\n\n// Composables\nimport { makeDensityProps } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\n\n// Utilities\nimport { computed, reactive, toRaw, withModifiers } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { InternalListItem } from '@/components/VList/VList'\nimport type { VListItemSlots } from '@/components/VList/VListItem'\nimport type { SelectStrategyProp } from '@/composables/nested/nested'\nimport type { GenericProps } from '@/util'\n\nexport type VTreeviewChildrenSlots<T> = {\n  [K in keyof Omit<VListItemSlots, 'default'>]: VListItemSlots[K] & {\n    item: T\n    internalItem: InternalListItem<T>\n  }\n} & {\n  default: never\n  item: {\n    props: InternalListItem['props']\n    item: T\n    internalItem: InternalListItem<T>\n  }\n}\n\nexport const makeVTreeviewChildrenProps = propsFactory({\n  disabled: Boolean,\n  loadChildren: Function as PropType<(item: unknown) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  items: Array as PropType<readonly InternalListItem[]>,\n  openOnClick: {\n    type: Boolean,\n    default: undefined,\n  },\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n  falseIcon: IconValue,\n  trueIcon: IconValue,\n  returnObject: Boolean,\n  selectable: Boolean,\n  selectedColor: String,\n  selectStrategy: [String, Function, Object] as PropType<SelectStrategyProp>,\n\n  ...makeDensityProps(),\n}, 'VTreeviewChildren')\n\nexport const VTreeviewChildren = genericComponent<new <T extends InternalListItem>(\n  props: {\n    items?: readonly T[]\n  },\n  slots: VTreeviewChildrenSlots<T>\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VTreeviewChildren',\n\n  props: makeVTreeviewChildrenProps(),\n\n  setup (props, { slots }) {\n    const isLoading = reactive(new Set<unknown>())\n\n    const isClickOnOpen = computed(() => !props.disabled && (props.openOnClick != null ? props.openOnClick : props.selectable))\n\n    async function checkChildren (item: InternalListItem) {\n      try {\n        if (!props.items?.length || !props.loadChildren) return\n\n        if (item?.children?.length === 0) {\n          isLoading.add(item.value)\n          await props.loadChildren(item.raw)\n        }\n      } finally {\n        isLoading.delete(item.value)\n      }\n    }\n\n    function selectItem (select: (value: boolean) => void, isSelected: boolean) {\n      if (props.selectable) {\n        select(!isSelected)\n      }\n    }\n\n    return () => slots.default?.() ?? props.items?.map(item => {\n      const { children, props: itemProps } = item\n      const loading = isLoading.has(item.value)\n      const slotsWithItem = {\n        prepend: slotProps => (\n          <>\n            { props.selectable && (!children || (children && !['leaf', 'single-leaf'].includes(props.selectStrategy as string))) && (\n              <div>\n                <VCheckboxBtn\n                  key={ item.value }\n                  modelValue={ slotProps.isSelected }\n                  disabled={ props.disabled }\n                  loading={ loading }\n                  color={ props.selectedColor }\n                  density={ props.density }\n                  indeterminate={ slotProps.isIndeterminate }\n                  indeterminateIcon={ props.indeterminateIcon }\n                  falseIcon={ props.falseIcon }\n                  trueIcon={ props.trueIcon }\n                  onClick={ withModifiers(() => selectItem(slotProps.select, slotProps.isSelected), ['stop']) }\n                  onKeydown={ (e: KeyboardEvent) => {\n                    if (!['Enter', 'Space'].includes(e.key)) return\n                    e.stopPropagation()\n                    selectItem(slotProps.select, slotProps.isSelected)\n                  }}\n                />\n              </div>\n            )}\n\n            { slots.prepend?.({ ...slotProps, item: item.raw, internalItem: item }) }\n          </>\n        ),\n        append: slots.append ? slotProps => slots.append?.({ ...slotProps, item: item.raw, internalItem: item }) : undefined,\n        title: slots.title ? slotProps => slots.title?.({ ...slotProps, item: item.raw, internalItem: item }) : undefined,\n        subtitle: slots.subtitle ? slotProps => slots.subtitle?.({ ...slotProps, item: item.raw, internalItem: item }) : undefined,\n      } satisfies VTreeviewItem['$props']['$children']\n\n      const treeviewGroupProps = VTreeviewGroup.filterProps(itemProps)\n      const treeviewChildrenProps = VTreeviewChildren.filterProps(props)\n\n      return children ? (\n        <VTreeviewGroup\n          { ...treeviewGroupProps }\n          value={ props.returnObject ? item.raw : treeviewGroupProps?.value }\n        >\n          {{\n            activator: ({ props: activatorProps }) => {\n              const listItemProps = {\n                ...itemProps,\n                ...activatorProps,\n                value: itemProps?.value,\n                onToggleExpand: [() => checkChildren(item), activatorProps.onClick] as any,\n                onClick: isClickOnOpen.value ? [() => checkChildren(item), activatorProps.onClick] as any : undefined,\n              }\n\n              return (\n                <VTreeviewItem\n                  { ...listItemProps }\n                  value={ props.returnObject ? item.raw : itemProps.value }\n                  loading={ loading }\n                  v-slots={ slotsWithItem }\n                />\n              )\n            },\n            default: () => (\n              <VTreeviewChildren\n                { ...treeviewChildrenProps }\n                items={ children }\n                returnObject={ props.returnObject }\n                v-slots={ slots }\n              />\n            ),\n          }}\n        </VTreeviewGroup>\n      ) : (\n        slots.item?.({ props: itemProps, item: item.raw, internalItem: item }) ?? (\n          <VTreeviewItem\n            { ...itemProps }\n            value={ props.returnObject ? toRaw(item.raw) : itemProps.value }\n            v-slots={ slotsWithItem }\n          />\n        ))\n    })\n  },\n})\n"],"mappings":"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","ignoreList":[]}