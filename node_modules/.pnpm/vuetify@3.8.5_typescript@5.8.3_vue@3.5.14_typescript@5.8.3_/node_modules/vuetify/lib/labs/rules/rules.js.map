{"version":3,"file":"rules.js","names":["inject","mergeDeep","createRules","options","locale","t","aliases","required","err","v","email","test","number","Number","integer","capital","maxLength","len","length","minLength","strictLength","exclude","forbiddenCharacters","error","character","includes","notEmpty","pattern","RulesSymbol","Symbol","for","useRules","ruleOptions","Error"],"sources":["../../../src/labs/rules/rules.ts"],"sourcesContent":["// Utilities\nimport { inject } from 'vue'\nimport { mergeDeep } from '@/util'\n\n// Types\nimport type { InjectionKey } from 'vue'\nimport type { LocaleInstance } from '@/composables/locale'\nimport type { ValidationRule } from '@/composables/validation'\n\nexport type ValidationRuleBuilderWithoutOptions = (err?: string) => ValidationRule\nexport type ValidationRuleBuilderWithOptions<T> = (options: T, err?: string) => ValidationRule\nexport type ValidationRuleBuilder =\n  | ValidationRuleBuilderWithoutOptions\n  | ValidationRuleBuilderWithOptions<any>\n\nexport interface RuleAliases {\n  [name: string]: ValidationRuleBuilder\n  required: ValidationRuleBuilderWithoutOptions\n  email: ValidationRuleBuilderWithoutOptions\n  number: ValidationRuleBuilderWithoutOptions\n  integer: ValidationRuleBuilderWithoutOptions\n  capital: ValidationRuleBuilderWithoutOptions\n  maxLength: ValidationRuleBuilderWithOptions<number>\n  minLength: ValidationRuleBuilderWithOptions<number>\n  strictLength: ValidationRuleBuilderWithOptions<number>\n  exclude: ValidationRuleBuilderWithOptions<string[]>\n  notEmpty: ValidationRuleBuilderWithoutOptions\n  pattern: ValidationRuleBuilderWithOptions<RegExp>\n}\n\nexport type RulesOptions = {\n  aliases?: Partial<RuleAliases>\n}\n\nexport function createRules (options: RulesOptions | undefined, locale: LocaleInstance) {\n  const { t } = locale\n\n  return mergeDeep({\n    aliases: {\n      required: (err?: string) => {\n        return (v: any) => {\n          // If the modifier .number is used, the 0 will be a number and it's a falsy value so we need to check for it\n          return v === 0 || !!v || t(err || '$vuetify.rules.required')\n        }\n      },\n      email: (err?: string) => {\n        return (v: any) => (!v || (typeof v === 'string' && /^.+@\\S+\\.\\S+$/.test(v))) || t(err || '$vuetify.rules.email')\n      },\n      number: (err?: string) => {\n        return (v: string) => !!Number(v) || t(err || '$vuetify.rules.number')\n      },\n      integer: (err?: string) => {\n        return (v: string) => (/^[\\d]*$/.test(v)) || t(err || '$vuetify.rules.integer')\n      },\n      capital: (err?: string) => {\n        return (v: string) => (/^[A-Z]*$/.test(v)) || t(err || '$vuetify.rules.capital')\n      },\n      maxLength: (len: number, err?: string) => {\n        return (v: any) => (!v || v.length <= len) || t(err || '$vuetify.rules.maxLength', [len])\n      },\n      minLength: (len: number, err?: string) => {\n        return (v: any) => (!v || v.length >= len) || t(err || '$vuetify.rules.minLength', [len])\n      },\n      strictLength: (len: number, err?: string) => {\n        return (v: any) => (!v || v.length === len) || t(err || '$vuetify.rules.strictLength', [len])\n      },\n      exclude: (forbiddenCharacters: string[], err?: string) => {\n        return (v: string) => {\n          let error: string | true = true\n          for (const character of forbiddenCharacters) {\n            if (v.includes(character)) error = err || t('$vuetify.rules.exclude', character)\n          }\n          return error\n        }\n      },\n      notEmpty: (err?: string) => {\n        return (v: any) => (v && v.length > 0) || t(err || '$vuetify.rules.notEmpty')\n      },\n      pattern: (pattern: RegExp, err?: string) => {\n        return (v: any) => (!v || pattern.test(v) || t(err || '$vuetify.rules.pattern'))\n      },\n    },\n  }, options)\n}\n\nexport const RulesSymbol: InjectionKey<RulesOptions> = Symbol.for('vuetify:rules')\n\nexport function useRules () {\n  const ruleOptions = inject(RulesSymbol)\n\n  if (!ruleOptions) throw new Error('Could not find Vuetify rules injection')\n\n  return ruleOptions.aliases\n}\n"],"mappings":"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","ignoreList":[]}