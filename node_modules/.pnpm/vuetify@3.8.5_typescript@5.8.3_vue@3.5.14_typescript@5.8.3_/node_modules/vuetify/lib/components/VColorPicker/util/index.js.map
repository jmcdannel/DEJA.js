{"version":3,"file":"index.js","names":["HexToHSV","HSLtoHSV","HSVtoHex","HSVtoHSL","HSVtoRGB","RGBtoHSV","has","stripAlpha","color","a","rest","extractColor","input","hasA","startsWith","r","g","b","h","s","l","Math","round","hex","slice","converted","hasAlpha","length","nullColor","v","rgba","inputProps","type","min","inputs","label","max","step","getValue","c","getColor","Number","_ref","to","from","rgb","hsla","_ref2","hsl","hexa","modes"],"sources":["../../../../src/components/VColorPicker/util/index.ts"],"sourcesContent":["// Utilities\nimport {\n  HexToHSV,\n  HSLtoHSV,\n  HSVtoHex,\n  HSVtoHSL,\n  HSVtoRGB,\n  RGBtoHSV,\n} from '@/util/colorUtils'\nimport { has } from '@/util/helpers'\n\n// Types\nimport type { HSL, HSV, RGB } from '@/util/colorUtils'\n\nfunction stripAlpha (color: any, stripAlpha: boolean) {\n  if (stripAlpha) {\n    const { a, ...rest } = color\n\n    return rest\n  }\n\n  return color\n}\n\nexport function extractColor (color: HSV, input: any) {\n  if (input == null || typeof input === 'string') {\n    const hasA = color.a !== 1\n    if (input?.startsWith('rgb(')) {\n      const { r, g, b, a } = HSVtoRGB(color)\n      return `rgb(${r} ${g} ${b}` + (hasA ? ` / ${a})` : ')')\n    } else if (input?.startsWith('hsl(')) {\n      const { h, s, l, a } = HSVtoHSL(color)\n      return `hsl(${h} ${Math.round(s * 100)} ${Math.round(l * 100)}` + (hasA ? ` / ${a})` : ')')\n    }\n\n    const hex = HSVtoHex(color)\n\n    if (color.a === 1) return hex.slice(0, 7)\n    else return hex\n  }\n\n  if (typeof input === 'object') {\n    let converted\n\n    if (has(input, ['r', 'g', 'b'])) converted = HSVtoRGB(color)\n    else if (has(input, ['h', 's', 'l'])) converted = HSVtoHSL(color)\n    else if (has(input, ['h', 's', 'v'])) converted = color\n\n    return stripAlpha(converted, !has(input, ['a']) && color.a === 1)\n  }\n\n  return color\n}\n\nexport function hasAlpha (color: any) {\n  if (!color) return false\n\n  if (typeof color === 'string') {\n    return color.length > 7\n  }\n\n  if (typeof color === 'object') {\n    return has(color, ['a']) || has(color, ['alpha'])\n  }\n\n  return false\n}\n\nexport const nullColor = { h: 0, s: 0, v: 0, a: 1 }\n\nexport type ColorPickerMode = {\n  inputProps: Record<string, unknown>\n  inputs: {\n    [key: string]: any\n    getValue: (color: any) => number | string\n    getColor: (color: any, v: string) => any\n  }[]\n  from: (color: any) => HSV\n  to: (color: HSV) => any\n}\n\nconst rgba: ColorPickerMode = {\n  inputProps: {\n    type: 'number',\n    min: 0,\n  },\n  inputs: [\n    {\n      label: 'R',\n      max: 255,\n      step: 1,\n      getValue: (c: RGB) => Math.round(c.r),\n      getColor: (c: RGB, v: string): RGB => ({ ...c, r: Number(v) }),\n    },\n    {\n      label: 'G',\n      max: 255,\n      step: 1,\n      getValue: (c: RGB) => Math.round(c.g),\n      getColor: (c: RGB, v: string): RGB => ({ ...c, g: Number(v) }),\n    },\n    {\n      label: 'B',\n      max: 255,\n      step: 1,\n      getValue: (c: RGB) => Math.round(c.b),\n      getColor: (c: RGB, v: string): RGB => ({ ...c, b: Number(v) }),\n    },\n    {\n      label: 'A',\n      max: 1,\n      step: 0.01,\n      getValue: ({ a }: RGB) => a != null ? Math.round(a * 100) / 100 : 1,\n      getColor: (c: RGB, v: string): RGB => ({ ...c, a: Number(v) }),\n    },\n  ],\n  to: HSVtoRGB,\n  from: RGBtoHSV,\n}\n\nconst rgb = {\n  ...rgba,\n  inputs: rgba.inputs?.slice(0, 3),\n}\n\nconst hsla: ColorPickerMode = {\n  inputProps: {\n    type: 'number',\n    min: 0,\n  },\n  inputs: [\n    {\n      label: 'H',\n      max: 360,\n      step: 1,\n      getValue: (c: HSL) => Math.round(c.h),\n      getColor: (c: HSL, v: string): HSL => ({ ...c, h: Number(v) }),\n    },\n    {\n      label: 'S',\n      max: 1,\n      step: 0.01,\n      getValue: (c: HSL) => Math.round(c.s * 100) / 100,\n      getColor: (c: HSL, v: string): HSL => ({ ...c, s: Number(v) }),\n    },\n    {\n      label: 'L',\n      max: 1,\n      step: 0.01,\n      getValue: (c: HSL) => Math.round(c.l * 100) / 100,\n      getColor: (c: HSL, v: string): HSL => ({ ...c, l: Number(v) }),\n    },\n    {\n      label: 'A',\n      max: 1,\n      step: 0.01,\n      getValue: ({ a }: HSL) => a != null ? Math.round(a * 100) / 100 : 1,\n      getColor: (c: HSL, v: string): HSL => ({ ...c, a: Number(v) }),\n    },\n  ],\n  to: HSVtoHSL,\n  from: HSLtoHSV,\n}\n\nconst hsl = {\n  ...hsla,\n  inputs: hsla.inputs.slice(0, 3),\n}\n\nconst hexa: ColorPickerMode = {\n  inputProps: {\n    type: 'text',\n  },\n  inputs: [\n    {\n      label: 'HEXA',\n      getValue: (c: string) => c,\n      getColor: (c: string, v: string) => v,\n    },\n  ],\n  to: HSVtoHex,\n  from: HexToHSV,\n}\n\nconst hex = {\n  ...hexa,\n  inputs: [\n    {\n      label: 'HEX',\n      getValue: (c: string) => c.slice(0, 7),\n      getColor: (c: string, v: string) => v,\n    },\n  ],\n}\n\nexport const modes = {\n  rgb,\n  rgba,\n  hsl,\n  hsla,\n  hex,\n  hexa,\n} satisfies Record<string, ColorPickerMode>\n"],"mappings":"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","ignoreList":[]}